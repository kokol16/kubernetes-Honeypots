---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: default
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      enabled: true
      paths:
        - /honeypot-logs/conpot/conpot.json*
      fields:   
        document_type: conpot
      fields_under_root: true
    - type: log
      enabled: true
      paths:
        - /honeypot-logs/cowrie/cowrie.json*
      fields:   
        document_type: cowrie
      fields_under_root: true
    - type: log
      enabled: true
      paths:
        - /honeypot-logs/dionaea/dionaea.json*
      fields:   
        document_type: dionaea
      fields_under_root: true
      processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/honeypot-logs/dionaea"
                logs_path: "/honeypot-logs/cowrie"
                logs_path: "/honeypot-logs/conpot"

    processors:
      - add_cloud_metadata:
      - add_host_metadata:

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}

    output.logstash:
      enabled: true
      hosts: [""]
      ssl.certificate_authorities: ["/certs/ca.crt"]
      ssl.certificate: "/certs/client.crt"
      ssl.key: "/certs/client.key"
      # ssl.key_passphrase: "PASSWORD"
      ssl.supported_protocols: "TLSv1.2"
    logging.level: debug
    #logging.to_files: true
    #logging.files:
     #path: /var/log/filebeat
     # name: filebeat
     # keepfiles: 7
     # permissions: 0644
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filebeat
  namespace: default
  labels:
    k8s-app: filebeat
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      labels:
        k8s-app: filebeat
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: filebeat
          image: docker.elastic.co/beats/filebeat:7.13.3
          args: ["-c", "/etc/filebeat.yml", "-e"]
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            runAsUser: 0

          volumeMounts:
          - mountPath: /usr/share/filebeat/data
            name: data
          - name: config
            mountPath: /etc/filebeat.yml
            readOnly: true
            subPath: filebeat.yml
            
            #mountPath: /var/lib/docker/containers
          - mountPath: /honeypot-logs
            name: honeypotlogs
            readOnly: true
          - mountPath: /certs
            name: certs

        

      volumes:
      - name: config
        configMap:
          defaultMode: 0640
          name: filebeat-config
      - name: certs
        hostPath:
          path: /certs        
      - name: honeypotlogs  
        hostPath:
          path:  /honeypot-logs
      
      - name: data
        hostPath:
          path: /var/lib/filebeat-data
          type: DirectoryOrCreate
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
  - kind: ServiceAccount
    name: filebeat
    namespace: default
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    k8s-app: filebeat
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
      - namespaces
      - pods
      - nodes
      - secrets
    verbs:
      - get
      - watch
      - list

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: default
  labels:
    k8s-app: filebeat
---

